# -*- coding: utf-8 -*-
"""Mid-Term Project - Note keeping (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P0yyVUssO0TJEIqFWoVjGInXn-7UwgY8
"""

print('''


 ██████╗ ██╗   ██╗██╗ ██████╗██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗███████╗███████╗
██╔═══██╗██║   ██║██║██╔════╝██║ ██╔╝    ████╗  ██║██╔═══██╗╚══██╔══╝██╔════╝██╔════╝
██║   ██║██║   ██║██║██║     █████╔╝     ██╔██╗ ██║██║   ██║   ██║   █████╗  ███████╗
██║▄▄ ██║██║   ██║██║██║     ██╔═██╗     ██║╚██╗██║██║   ██║   ██║   ██╔══╝  ╚════██║
╚██████╔╝╚██████╔╝██║╚██████╗██║  ██╗    ██║ ╚████║╚██████╔╝   ██║   ███████╗███████║
 ╚══▀▀═╝  ╚═════╝ ╚═╝ ╚═════╝╚═╝  ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚══════╝╚══════╝  
                                                              - by Andrea and Bhushan                                        
                                                              
                          Welcome To QuickNotes!!!

                        Following Functions available:

                        overwrite()  : to overwrite a note
                        addnew()     : to add a new note
                        rename()     : to rename the note title
                        showtitles() : to see list of note titles
                        delete_note(): delete entire note
                        edit_note()  :edit the note
                        clearall()   : clear all notes
                        showall()     : show all titles and notes
          ''')

#Create a new json object.??? or check if existing already?? or provide a blank json with .py file as extra??
import json
notes_dict={}
with open('notes_json.json','w') as jsonFile:
    json.dump(notes_dict, jsonFile)

#overwrite a note
#search for note title
# get input from user for new value
#replace the value in dictionary

def overwrite():
    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
        
    search_for_title = input("title u want to search for:") #title of note you want to change
    notes_dict.get(search_for_title)

    if search_for_title in notes_dict.keys():                 #update only if title is in keys
        updated_content = input("input updated content")
        notes_dict[search_for_title] = updated_content       #replace content of title selected above
    else:
         print( "title not found. enter correct title")
    #Write the object to file.
    with open('notes_json.json','w') as jsonFile:
        json.dump(notes_dict, jsonFile)

#overwrite()

#renaming title
def rename():
    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
    
    old_title = input("input old title to rename")

    if old_title in notes_dict.keys():
        new_title = input("input new title")
        notes_dict[new_title] = notes_dict.pop(old_title)
    else:
        print( "title not found.Enter correct title")
    #Write the object to file.
    with open('notes_json.json','w') as jsonFile:
        json.dump(notes_dict, jsonFile)

#rename()

#add new note

def addnew():

    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
    

    New_note_title = input("new note title")
    New_note_content =  input("new note content")
    new_note = {New_note_title:New_note_content} 
    notes_dict.update(new_note)


#Write the object to file.
    with open('notes_json.json','w') as jsonFile:
        json.dump(notes_dict, jsonFile)
  
    notes_dict

#addnew()

#share note title list 
def showtitles():
    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
        
    print("Titles:")
    for i in list(notes_dict.keys()):
        print (i)

#showtitles()

def search_note():
    import json
    #convert stored notes_json to dict to work in python
    #with open('notes_json.json','r') as json_file:
     #   notes_dict = json.load(json_file)
        
    search_for = input("Searching for: ")

    if search_for in notes_dict.keys():
        print(f"The note with the title {search_for} was found: {notes_dict[search_for]}")
    
    elif search_for in notes_dict.values():
        print(f"The note with the content {search_for} was found.")
        
    else:
        print(f"Sorry, no note with the term {search_for} could be found.")

#search_note()

def delete_note():
    #convert stored notes_json to dict to work in python
    #with open('notes_json.json','r') as json_file:
    #    notes_dict = json.load(json_file)
        
    delete_note = input("Delete note with the title:")
    if delete_note in notes_dict.keys():
        notes_dict.pop(delete_note)
        print(f"Note was deleted.")

        #Write the object to file.
        with open('notes_json.json','w') as jsonFile:
            json.dump(notes_dict, jsonFile)
            
    else:
        print("The note does not exist.")

#delete_note()

def edit_note():
    note_to_edit = input("Which note would you like to edit:")
    
    
    if note_to_edit in notes_dict.keys():
        edit = input("I would like to add:")
        temp = notes_dict[note_to_edit]
        notes_dict[note_to_edit] = temp + ' '+ edit
        
    else:
        print(f"Sorry, no note with the term {note_to_edit} could be found.")

#edit_note()

def clearall():

    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
    
    notes_dict.clear()

#Write the object to file.
    with open('notes_json.json','w') as jsonFile:
        json.dump(notes_dict, jsonFile)

#clearall()

def showall():
    import json
    #convert stored notes_json to dict to work in python
    with open('notes_json.json','r') as json_file:
        notes_dict = json.load(json_file)
        
    for k, v in notes_dict.items():
        print (f" TITLE: {k}    CONTENT: {v}")
    
    #Write the object to file.
    with open('notes_json.json','w') as jsonFile:
        json.dump(notes_dict, jsonFile)
        
        
def operation():
  action = input('''what do you want to do?
                Type   1  to 'overwrite' a note
                       2  to 'add' a new note
                       3  to 'rename' the note title
                       4  to 'see' list of note titles
                       5  to 'delete' entire note
                       6  to 'edit' the note
                       7  to 'clear all' notes
                       8  to 'show all' titles and notes''')
  if action == 2:
      addnew()
  elif action == 3:
      rename()

while input("do u want to do something?")== "Y" or "y":
    operation()